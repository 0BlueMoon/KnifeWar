
local Time = 0.5
local StartTime = tick()

while tick() - StartTime < Time do
    game:GetService("TweenService"):Create(workspace.CurrentCamera, TweenInfo.new(0.1), {CFrame = workspace.CurrentCamera.CFrame * CFrame.Angles(0, math.rad(1), 0)}):Play()
    wait(0.1)
end

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()
local PhantomForcesWindow = Library:NewWindow("Knife War")
local slide1 = PhantomForcesWindow:NewSection("Main")

slide1:CreateTextbox("WalkSpeed",function(speed)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = tonumber(speed) 
end)
slide1:CreateToggle("HitBox", function(value)
    if value then
_G.HeadSize = 20
_G.Disabled = true

game:GetService('RunService').RenderStepped:connect(function()
if _G.Disabled then
for i,v in next, game:GetService('Players'):GetPlayers() do
if v.Name ~= game:GetService('Players').LocalPlayer.Name then
pcall(function()
v.Character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize)
v.Character.HumanoidRootPart.Transparency = 0.7
v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really blue")
v.Character.HumanoidRootPart.Material = "Neon"
v.Character.HumanoidRootPart.CanCollide = false
end)
end
end
end
end)
    else
_G.HeadSize = 0
_G.Disabled = true

game:GetService('RunService').RenderStepped:connect(function()
if _G.Disabled then
for i,v in next, game:GetService('Players'):GetPlayers() do
if v.Name ~= game:GetService('Players').LocalPlayer.Name then
pcall(function()
v.Character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize)
v.Character.HumanoidRootPart.Transparency = 0.7
v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really blue")
v.Character.HumanoidRootPart.Material = "Neon"
v.Character.HumanoidRootPart.CanCollide = false
end)
end
end
end
end)
    end
end)
slide1:CreateToggle("Auto Attach", function(value)
    if value then
        local range = 1
        local player = game:GetService("Players").LocalPlayer
        local connection = game:GetService("RunService").RenderStepped:Connect(function()
            local p = game.Players:GetPlayers()
            for i = 2, #p do 
                local v = p[i].Character
                if v and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") and player:DistanceFromCharacter(v.HumanoidRootPart.Position) <= range then
                    local tool = player.Character and player.Character:FindFirstChildOfClass("Tool")
                    if tool and tool:FindFirstChild("Handle") then
                        tool:Activate()
                        for i, part in ipairs(v:GetChildren()) do
                            if part:IsA("BasePart") then
                                firetouchinterest(tool.Handle, part, 0)
                                firetouchinterest(tool.Handle, part, 1)
                            end
                        end
                    end
                end
            end
        end)
        _G.AutoAttach = connection
    else
        if _G.AutoAttach then
            _G.AutoAttach:Disconnect()
            _G.AutoAttach = nil
        end
    end
end)

local function teleportToArena()
    game:GetService('Players').LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(69.5712814, 166.81398, 57.1438026, 0.146949142, -7.42369579e-08, 0.989144027, 5.75868455e-08, 1, 6.64965043e-08, -0.989144027, 4.71900812e-08, 0.146949142)
end

local function onHealthChanged(health)
    if health <= 0 then
        teleportToArena()
        wait(3.5)
        if game.Players.LocalPlayer.Character.Humanoid.Health <= 0 then
            teleportToArena()
        end
    end
end

slide1:CreateToggle("Auto TP To Arena", function(value)
    if value then
        game.Players.LocalPlayer.Character:WaitForChild("Humanoid").HealthChanged:Connect(onHealthChanged)
    else
        game.Players.LocalPlayer.Character:WaitForChild("Humanoid").HealthChanged:Disconnect()
    end
end)


local AutoFlingEnabled = false

slide1:CreateToggle("Auto Fling", function(value)
    AutoFlingEnabled = value
    if value then
        local Targets = {}
        local AllBool = true  
        for i, p in ipairs(Players:GetPlayers()) do
            if p ~= Player then 
                table.insert(Targets, p.Name)
            end
        end
        local Message = function(_Title, _Text, Time)
            game:GetService("StarterGui"):SetCore("SendNotification", {Title = _Title, Text = _Text, Duration = Time})
        end
        local SkidFling = function(TargetPlayer)
        end
        local function ExecuteFling()
            if AutoFlingEnabled then
                for _, Target in ipairs(Targets) do
                    local TargetPlayer = Players:FindFirstChild(Target)
                    if TargetPlayer and TargetPlayer ~= Player then
                        SkidFling(TargetPlayer)
                    end
                end
            end
        end
    else
    AutoFlingEnabled = false
    end
end)

local slide2 = PhantomForcesWindow:NewSection("BY: Moon")


